@use "sass:list";

// size
:root {
  --ct-width: 128rem;
  body {
    max-width: var(--ct-width);
    margin: auto;
  }
}

// color
:root {
  --def-main-color: #bed440;
  --def-main-color-highlight: #d1de43;
  --def-main-color-soft: #ccdb74;
  --def-main-color-pale: #dfec98;
  --def-main-color-fluo: #c5d85840;
  --def-main-color-pale-fluo: #dfec9840;
  --def-main-color-strong: #a8be28;
  --def-main-color-deep: #87991f;
  --def-main-color-dark: #677612;
  --def-main-color-text: #31332b;
  --def-main-color-grayish-fluo: hsla(68, 15%, 65%, 0.15);
  --def-main-color-dark-grayish: hsl(68, 7%, 30%);
  --def-main-color-dark-grayish-fluo: hsla(68, 7%, 30%, 0.15);
  --def-main-color-very-grayish: hsl(68, 9%, 48%);
  --def-main-color-grayish: hsl(68, 15%, 65%);
  --def-main-color-light-grayish: hsl(68, 28%, 75%);
  --def-main-color-light-grayish-fluo: hsla(68, 28%, 75%, 0.15);
  --def-main-color-pearl-grayish: hsl(68, 48%, 87%);
  --def-sub-color: #b99f72;
  --def-sub-color-soft: #d8bb8a;
  --def-sub-color-strong: #96815c;
  --def-text-color: #27231d;
  --def-dark-text-color: white;
  --def-background-color: #fdfde4;
  --def-text-background-white: hsla(0, 0%, 100%, 0.9);
  --def-text-background-black: hsla(0, 0%, 0%, 0.75);
  --def-play-background-color: #ecfffe;
  --def-dark-background-color: hsl(80, 10%, 14%);
  --def-dark-play-background-color: hsl(0, 0%, 18%);
  --def-warm-color: #f87171;
  --def-warm-color-hover: #fa5757;
  --def-lightbox-background: rgba(0, 0, 0, 0.3);
  --def-lightbox-background-preview: rgba(146, 147, 127, 0.8);
  --def-modal-window-background: rgb(246, 246, 243);
  --def-light-form-background-color: white;
}

:root.theme-orange {
  --def-main-color: #ecae75;
  --def-main-color-highlight: #efba79;
  --def-main-color-soft: #fac798;
  --def-main-color-pale: #ffd8a2;
  --def-main-color-fluo: #f8b06d40;
  --def-main-color-pale-fluo: #fde5c440;
  --def-main-color-strong: #d88b44;
  --def-main-color-deep: #b56316;
  --def-main-color-dark: #a55a14;
  --def-main-color-text: #2f2b27;
  --def-text-color: #27231d;
  --def-main-color-grayish-fluo: hsla(29, 8%, 54%, 0.15);
  --def-main-color-dark-grayish: hsl(29, 7%, 30%);
  --def-main-color-dark-grayish-fluo: hsla(29, 7%, 30%, 0.15);
  --def-main-color-very-grayish: hsl(29, 9%, 48%);
  --def-main-color-grayish: hsl(29, 15%, 65%);
  --def-main-color-light-grayish: hsl(29, 28%, 75%);
  --def-main-color-light-grayish-fluo: hsla(29, 28%, 75%, 0.15);
  --def-main-color-pearl-grayish: hsl(29, 48%, 87%);
  --def-background-color: #fff8e3;
  --def-play-background-color: #fffbdf;
  --def-dark-background-color: hsl(45, 10%, 14%);
}

:root.theme-aqua {
  --def-main-color: #53c3dd;
  --def-main-color-highlight: #59d6e4;
  --def-main-color-soft: #6ed5ed;
  --def-main-color-pale: #a9e9f7;
  --def-main-color-fluo: #47b7d040;
  --def-main-color-pale-fluo: #a9e9f740;
  --def-main-color-strong: #43beda;
  --def-main-color-deep: #32b2ce;
  --def-main-color-dark: #2ea3be;
  --def-main-color-text: #2e3638;
  --def-text-color: #1d2227;
  --def-main-color-grayish-fluo: hsla(191, 8%, 54%, 0.15);
  --def-main-color-dark-grayish: hsl(191, 7%, 30%);
  --def-main-color-dark-grayish-fluo: hsla(191, 7%, 30%, 0.15);
  --def-main-color-very-grayish: hsl(191, 9%, 48%);
  --def-main-color-grayish: hsl(191, 15%, 65%);
  --def-main-color-light-grayish: hsl(191, 28%, 75%);
  --def-main-color-light-grayish-fluo: hsla(191, 28%, 75%, 0.15);
  --def-main-color-pearl-grayish: hsl(191, 48%, 87%);
  --def-background-color: #e5fcf6;
  --def-play-background-color: #d9f8f6;
  --def-dark-background-color: hsl(150, 10%, 10%);
}

:root {
  --main-color: var(--def-main-color);
  --main-color-highlight: var(--def-main-color-highlight);
  --main-color-soft: var(--def-main-color-soft);
  --main-color-pale: var(--def-main-color-pale);
  --main-color-fluo: var(--def-main-color-fluo);
  --main-color-pale-fluo: var(--def-main-color-pale-fluo);
  --main-color-strong: var(--def-main-color-strong);
  --main-color-deep: var(--def-main-color-deep);
  --main-color-dark: var(--def-main-color-dark);
  --main-color-text: var(--def-main-color-text);
  --main-color-grayish-fluo: var(--def-main-color-grayish-fluo);
  --main-color-dark-grayish: var(--def-main-color-dark-grayish);
  --main-color-dark-grayish-fluo: var(--def-main-color-light-dark-fluo);
  --main-color-very-grayish: var(--def-main-color-very-grayish);
  --main-color-grayish: var(--def-main-color-grayish);
  --main-color-light-grayish: var(--def-main-color-light-grayish);
  --main-color-light-grayish-fluo: var(--def-main-color-light-grayish-fluo);
  --main-color-pearl-grayish: var(--def-main-color-pearl-grayish);
  --main-color-dark-text: var(--def-main-color-dark-grayish);
  --sub-color: var(--def-sub-color);
  --sub-color-soft: var(--def-sub-color-soft);
  --sub-color-strong: var(--def-sub-color-strong);
  --text-color: var(--def-text-color);
  --dark-text-color: var(--def-dark-text-color);
  --background-color: var(--def-background-color);
  --text-background: var(--def-text-background-white);
  --play-background-color: var(--def-play-background-color);
  --dark-background-color: var(--def-dark-background-color);
  --dark-play-background-color: var(--def-dark-play-background-color);
  --warm-color: var(--def-warm-color);
  --warm-color-hover: var(--def-warm-color-hover);
  --lightbox-background: var(--def-lightbox-background);
  --lightbox-background-preview: var(--def-lightbox-background-preview);
  --modal-window-background: var(--def-modal-window-background);
  --light-form-background-color: var(--def-light-form-background-color);
  --dark-form-background-color: var(--def-dark-background-color);
  --link-color: var(--main-color-deep);
  --link-color-hover: var(--main-color-strong);
}

// dark mode
%lightMode {
  --background: var(--background-color);
  --background-input: white;
  --background-bw: white;
  --form-background-color: var(--light-form-background-color);
}
@mixin darkMode() {
  --text-color: var(--def-dark-text-color);
  --main-color: var(--def-main-color-strong);
  --main-color-strong: var(--def-main-color);
  --main-color-dark-text: var(--def-dark-text-color);
  --main-color-pale: var(--def-main-color-dark);
  --main-color-soft: var(--def-main-color-deep);
  --main-color-pearl-grayish: var(--def-main-color-dark-grayish);
  --main-color-light-grayish: var(--def-main-color-very-grayish);
  --main-color-very-grayish: var(--def-main-color-light-grayish);
  --main-color-dark-grayish: var(--def-main-color-pearl-grayish);
  --main-color-light-grayish-fluo: var(--def-main-color-dark-grayish-fluo);
  --main-color-dark-grayish-fluo: var(--def-main-color-light-grayish-fluo);
  --main-color-dark: var(--def-main-color-soft);
  --background: var(--def-dark-background-color);
  --background-input: var(--def-dark-background-color);
  --background-bw: rgb(10, 10, 10);
  --modal-window-background: var(--def-dark-background-color);
  --text-background: var(--def-text-background-black);
  --play-background-color: var(--def-dark-play-background-color);
  --form-background-color: var(--def-dark-form-background-color);
  --lightbox-background-preview: rgba(103, 103, 94, 0.8);
}

:root {
  accent-color: var(--main-color-deep);
}

@keyframes FadeInAnim {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes SlightlyZoomInAnim {
  from {
    transform: scale(0.975);
  }
  to {
    transform: scale(1);
  }
}
@keyframes FadeOutAnim {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes SlightlyZoomOutAnim {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(0.975);
  }
}
@keyframes ZoomInAnim {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
  }
}
@keyframes ZoomOutAnim {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(0);
  }
}
@keyframes ZoomInYAnim {
  from {
    transform: scaleY(0);
  }
  to {
    transform: scaleY(1);
  }
}
@keyframes ZoomOutYAnim {
  from {
    transform: scaleY(1);
  }
  to {
    transform: scaleY(0);
  }
}

@mixin CursorKeyframe($name, $url_or_time, $urls...) {
  $max: list.length($urls);
  $keyname: cursor-#{$name};
  @if $max > 0 {
    @keyframes #{$keyname} {
      $i: 0;
      @each $url in $urls {
        $p: (100 * calc($i / $max)) + "%";
        $i: $i + 1;
        #{$p} {
          cursor:
            url(#{$url}),
            #{$name};
        }
      }
    }
    %#{$keyname} {
      animation: #{$keyname} #{$url_or_time} step-end infinite;
    }
  } @else {
    %#{$keyname} {
      cursor:
        url(#{$url_or_time}),
        #{$name};
    }
  }
  .#{$keyname} {
    @extend %#{$keyname};
  }
}

@keyframes SimpleGageAnim {
  from {
    width: 0%;
  }
  to {
    width: 100%;
  }
}

@include CursorKeyframe(
  "default",
  "/static/images/cursor/わたかぜくんカーソル_通常_00.cur"
);
@include CursorKeyframe(
  "pointer",
  1000ms,
  "/static/images/cursor/わたかぜくんカーソル_ポインター_00.cur",
  "/static/images/cursor/わたかぜくんカーソル_ポインター_01.cur"
);
@include CursorKeyframe(
  "move",
  1000ms,
  "/static/images/cursor/わたかぜくんカーソル_移動_00.cur",
  "/static/images/cursor/わたかぜくんカーソル_移動_01.cur"
);
@include CursorKeyframe(
  "backgorund",
  1000ms,
  "/static/images/cursor/わたかぜくんカーソル_バックグラウンド_00.cur",
  "/static/images/cursor/わたかぜくんカーソル_バックグラウンド_01.cur"
);
@include CursorKeyframe(
  "progress",
  1000ms,
  "/static/images/cursor/わたかぜくんカーソル_バックグラウンド_00.cur",
  "/static/images/cursor/わたかぜくんカーソル_バックグラウンド_01.cur"
);
@include CursorKeyframe(
  "wait",
  2000ms,
  "/static/images/cursor/わたかぜくんカーソル_待機_00.cur",
  "/static/images/cursor/わたかぜくんカーソル_待機_01.cur",
  "/static/images/cursor/わたかぜくんカーソル_待機_02.cur",
  "/static/images/cursor/わたかぜくんカーソル_待機_03.cur"
);
@include CursorKeyframe(
  "not-allowed",
  1000ms,
  "/static/images/cursor/わたかぜくんカーソル_禁止_00.cur",
  "/static/images/cursor/わたかぜくんカーソル_禁止_01.cur"
);
@include CursorKeyframe(
  "text",
  "/static/images/cursor/わたかぜくんカーソル_テキスト選択_00.cur"
);
a,
.pointer,
.readmore,
select,
input[type="checkbox"] {
  @extend %cursor-pointer;
}
input,
textarea,
[editable] {
  @extend %cursor-text;
}
.move {
  a {
    pointer-events: none;
    text-decoration: none;
  }
  @extend %cursor-move;
}

%windowMinWidth {
  min-width: 360px;
}

:root {
  color: var(--text-color);
  @extend %windowMinWidth;
  @extend %cursor-default;
  @extend %lightMode;
  &.dark {
    @include darkMode();
  }
  @media (prefers-color-scheme: dark) {
    &.auto {
      @include darkMode();
    }
  }
}
%backgroundTransition {
  transition: background-color 1s;
}

:root:not(.loading) {
  &,
  .headerBackground,
  .InPageMenu .background {
    @extend %backgroundTransition;
  }
}
:root.audio_play {
  &,
  .headerBackground,
  .InPageMenu .background {
    background-color: var(--play-background-color);
  }
}
// .bg-background,
// .bg-background-bottom,
// :root {
//   transition: background-color 1s;
// }

@import url("https://fonts.googleapis.com/css2?family=Kosugi+Maru&family=Nunito:ital,wght@0,200..1000;1,200..1000&family=Lexend+Zetta:wght@100..900&display=swap");

// 100-900
@mixin LexendZetta($weight: 400) {
  font-family: "Lexend Zetta", sans-serif;
  font-optical-sizing: auto;
  font-weight: $weight;
  font-style: normal;
}

// 200-1000
@mixin Nunito($weight: 400) {
  font-family: "Nunito", sans-serif;
  font-optical-sizing: auto;
  font-weight: $weight;
  font-style: normal;
}

@mixin SpacingInner($property, $size, $vector: "") {
  $m: #{0.25 * $size}rem;
  @if $vector == "t" {
    #{$property}-top: #{$m};
  } @else if $vector == "b" {
    #{$property}-bottom: #{$m};
  } @else if $vector == "l" {
    #{$property}-left: #{$m};
  } @else if $vector == "r" {
    #{$property}-right: #{$m};
  } @else {
    #{$property}: #{$m};
  }
}
@mixin MarginInner($size, $vector: "") {
  @include SpacingInner("margin", $size, $vector);
}
@mixin Margin($size, $vector: "") {
  .m#{$vector}-#{$size} {
    @include MarginInner($size, $vector);
  }
}

@mixin square($size) {
  width: $size;
  height: $size;
}

$m-sizes: 1, 2, 3, 4;
$m-vectors: "", "t", "b", "l", "r";
@each $m-vector in $m-vectors {
  @each $m-size in $m-sizes {
    @include Margin($m-size, $m-vector);
  }
}

$mobileWidth: 520px;
$tabletWidth: 768px;
$miniDesktopWidth: 960px;
$desktopWidth: 1280px;

:root {
  font-family: "Nunito", "Kosugi Maru", sans-serif;
  font-size: medium;
  @media (min-width: $tabletWidth) {
    font-size: large;
  }
}

.en-title-font {
  @include LexendZetta(700);
  letter-spacing: normal;
}

* {
  -webkit-tap-highlight-color: var(--main-color-fluo);
  ::selection {
    background-color: var(--main-color-soft);
    color: white;
  }
}

@mixin ColorSetter($className, $color, $bg-inner: white) {
  .#{$className} {
    color: #{$color};
  }
  .#{$className}-bg {
    color: #{$bg-inner};
    background-color: #{$color};
  }
}

@include ColorSetter("color-main", var(--main-color));
@include ColorSetter("color-soft", var(--main-color-soft));
@include ColorSetter("color-deep", var(--main-color-deep));
@include ColorSetter("color-dark", var(--main-color-dark));
@include ColorSetter("color-warm", var(--warm-color));
@include ColorSetter("color-gray", var(--main-color-light-grayish));

%slider-track-background {
  background-color: hsla(0, 0%, 65%, 0.3);
}
.slider {
  width: 100%;
  height: 0.5rem;
  position: relative;
  .track {
    height: 100%;
    @extend %slider-track-background;
  }
  .track-0 {
    position: absolute;
    background-color: var(--main-color);
  }
}

.pixel {
  image-rendering: pixelated;
}

style {
  display: none !important;
}

[disabled] {
  pointer-events: none;
}

.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.text-center {
  text-align: center;
}

%sm-width {
  margin: auto;
  max-width: 32rem;
}

table:not([class^="fc-"]) {
  display: inline-table;
  border-collapse: collapse;
  margin: 0.5rem;
  border: solid 2px var(--main-color-dark-grayish);
  th {
    background-color: var(--main-color-pale);
  }
  th,
  td {
    border: solid 1px;
    padding: 0.25rem 0.25rem;
    height: fit-content;
    @media (min-width: $mobileWidth) {
      padding: 0.25rem 1rem;
    }
  }
}
table {
  .history & {
    a.date {
      pointer-events: none;
      color: var(--text-color);
    }
    @media (max-width: $tabletWidth) {
      th,
      td {
        &:nth-child(n + 4) {
          display: none;
        }
      }
      a.date {
        pointer-events: all;
        color: var(--link-color);
      }
    }
  }
  .price & {
    th {
      color: var(--text-background);
      background-color: var(--main-color-dark-grayish);
    }
    td:first-child {
      background-color: var(--main-color-pale);
    }
  }
}

.history {
  .modalEntire {
    z-index: 35;
  }
  .modal table {
    tr {
      display: flex;
      flex-direction: column;
    }
    th,
    td {
      padding: 0.25rem 1rem;
      display: table-cell;
      border-bottom: 0;
      border-left: 0;
      border-right: 0;
      &:first-child {
        border-top: 0;
        background-color: var(--main-color-pale);
      }
      a.date {
        pointer-events: none;
        color: var(--text-color);
      }
    }
  }
}

ul,
ol {
  white-space: normal;
  text-align: left;
  margin: auto;
  @media (min-width: $mobileWidth) {
    width: max-content;
  }
  &.auto,
  &.wide {
    &,
    ul,
    ol {
      width: auto;
    }
  }
  &:not(.wide) {
    max-width: 32rem;
  }
  li {
    line-height: 2em;
    &[tabindex]:focus {
      background-color: var(--main-color-fluo);
    }
    .text {
      white-space: pre-line;
    }
    ul,
    ol {
      margin-left: 0;
    }
  }
  &.flex {
    padding: 0;
  }
  &.files,
  &.redirects {
    display: flex;
    flex-direction: column;
    align-items: center;
    max-width: 32rem;
    padding: 0;
    li {
      list-style: none;
      display: inline-flex;
      align-items: center;
      height: 2rem;
      padding: 0 0.5rem;
      > * {
        margin: 0.25rem;
      }
      .name {
        flex: 1;
      }
      svg {
        height: 1.25rem;
        width: 1.25rem;
      }
    }
  }
}
%ulolAuto {
  ul,
  ol {
    width: auto;
    margin-left: 0;
  }
}

.flex {
  display: flex;
}
.inline-flex {
  display: inline-flex;
}
.flex,
.inline-flex {
  &.left {
    align-items: flex-start;
  }
  &.right {
    align-items: flex-end;
  }
  &.center,
  &.justify-center {
    justify-content: center;
  }
  &.center,
  &.items-center {
    align-items: center;
  }
  &.justify-start {
    justify-content: flex-start;
  }
  &.justify-end {
    justify-content: flex-end;
  }
  &.justify-between {
    justify-content: space-between;
  }
  &.row {
    flex-direction: row;
  }
  &.column {
    flex-direction: column;
  }
  &.wrap {
    flex-wrap: wrap;
    &.row > * {
      min-width: 0;
    }
    &.column > * {
      max-width: 100%;
    }
  }
  &.around {
    justify-content: space-around;
  }
  &.evenly {
    justify-content: space-evenly;
  }
  &.font-larger {
    > * {
      margin: 0.5rem;
    }
  }
}
.flex-1 {
  flex: 1;
}
.p-0 {
  padding: 0;
}
.m-0 {
  margin: 0;
}
.m-auto {
  margin: auto;
}
.m-lr-auto {
  margin-left: auto;
  margin-right: auto;
}
.relative {
  position: relative;
}
.absolute {
  position: absolute;
}
.container {
  margin: 1rem 0.5rem 2.5rem;
}

.absoluteCorner {
  position: absolute;
  z-index: 50;
  &.top {
    top: 0;
  }
  &.bottom {
    bottom: 0;
  }
  &.right {
    right: 0;
  }
  &.left {
    left: 0;
  }
}

label {
  span {
    display: inline-block;
  }
}

%userSelectNone {
  -webkit-user-select: none;
  user-select: none;
}

button,
[role="button"],
a {
  svg,
  img {
    vertical-align: bottom;
  }
}
li {
  vertical-align: middle;
}

.icons {
  font-size: 1rem;
  & > *:not(.tight) {
    margin: 0 0.25rem;
    svg {
      width: 1.5rem;
      height: 1.5rem;
    }
  }
}

.charaIcon {
  display: inline-block;
  width: 1.25em;
  height: 1.25em;
  font-size: 1.875rem;
  margin-right: 0.25rem;
}

@mixin commonHeader() {
  .header {
    justify-content: flex-end;
    &,
    & > .flex {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      margin: 0.25rem;
      & > * {
        margin: 0.25rem;
      }
    }
    .icons {
      display: flex;
      align-items: center;
    }
    .search {
      font-size: 1rem;
      width: 16rem;
      padding: 0.375rem 0.5rem;
    }
    .tagSelect {
      min-width: 20rem;
    }
    .characterSelect {
      min-width: 16rem;
    }
    .tagSelect,
    .characterSelect {
      text-align: left;
      > div:first-of-type {
        @extend %cursor-pointer;
      }
    }
  }
}

// ループ用のグリッドレイアウト関数、列数のみのシンプルな形
@mixin GridListOneSize($child, $grid) {
  // 基本の形、2倍の分割数にすることで半分ずらしに対応できる
  grid-template-columns: repeat($grid * 2, 1fr);
  > #{$child} {
    grid-column: span 2;
  }
  // 要素数が1つのみの場合、中央にくる形になる
  @if $grid > 0 {
    & > #{$child}:only-of-type {
      grid-column: $grid / span 2;
    }
  }
  // 要素数が2つ以上の場合、要素数未満の場合のみループ処理で中央に揃う
  @if $grid > 2 {
    & > #{$child}:first-of-type {
      @for $i from 2 to $grid {
        &:nth-last-of-type(#{$i}) {
          $base: $grid + 1 - $i;
          & {
            grid-column: $base / span 2;
          }
          @for $j from 2 through $i {
            ~ #{$child}:nth-of-type(#{$j}) {
              grid-column: #{$base + ($j - 1) * 2} / span 2;
            }
          }
        }
      }
    }
  }
}

// 最初の引数は子要素名、二番目は列数、それ以降は列数を増やす横幅を任意の数指定できる
@mixin GridList($child, $baseGrid: 1, $media_width...) {
  display: grid;
  @if $child == "li" {
    padding: 0;
    text-align: initial;
    li {
      list-style: none;
    }
  }
  @include GridListOneSize($child, $baseGrid);
  $i: 0;
  @each $width in $media_width {
    $i: $i + 1;
    @media (min-width: #{$width}) {
      @include GridListOneSize($child, $baseGrid + $i);
    }
  }
}

// ループ用のフレックスレイアウト関数、列数のみのシンプルな形
@mixin FlexListOneSize($grid) {
  > * {
    width: #{calc(100 / $grid) + "%"};
    box-sizing: border-box;
  }
}

// 最初の引数は列数、それ以降は列数を増やす横幅を任意の数指定できる
@mixin FlexList($baseGrid, $media_width...) {
  display: flex;
  flex-wrap: wrap;
  $i: 0;
  @include FlexListOneSize($baseGrid);
  @each $url in $media_width {
    $i: $i + 1;
    @media (min-width: #{$url}) {
      @include FlexListOneSize($baseGrid + $i);
    }
  }
}

body {
  margin: 0;
  padding: 0;
  background-color: transparent;
  overflow-x: hidden;
  overflow-y: scroll;
}
:root {
  &.loading {
    overflow-y: hidden;
    scrollbar-color: transparent transparent !important;
  }
  &.dummy {
    main::before {
      content: "";
      display: block;
      min-height: 5000rem;
    }
  }
}

%fillCover {
  display: block;
  position: fixed;
  width: 100vw;
  height: 100vh;
  height: 100dvh;
  top: 0;
  left: 0;
}

.fillCoverWindow {
  display: none;
  &.enabled {
    @extend %fillCover;
  }
}

.loadingWindow {
  display: none;
  .loading & {
    @extend %fillCover;
    width: 100%;
    max-width: var(--ct-width);
    background-color: var(--background);
    z-index: 1500;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-family: sans-serif;
    text-align: center;
    .loadingNow {
      color: var(--main-color);
      font-size: 1.5rem;
    }
    img {
      margin: 1rem;
      width: auto;
      height: 128px;
    }
    .slider {
      margin: 2rem;
      width: 75%;
      max-width: 32rem;
    }
  }
}

%auto-phrase {
  word-break: normal;
  word-break: auto-phrase;
}

%line-none {
  text-decoration-line: none;
  &.underline {
    text-decoration-line: underline;
  }
}

%a-line-none {
  a {
    @extend %line-none;
  }
}

.line-none a,
a.line-none {
  @extend %line-none;
}

.p-br p,
p.p-br {
  margin-top: 0;
  margin-bottom: 0;
}

@mixin p-br-mixin($tb) {
  .p-br-#{$tb} p,
  p.p-br-#{$tb} {
    margin-top: #{$tb}px;
    margin-bottom: #{$tb}px;
  }
}

@include p-br-mixin(2);

:root {
  background-color: var(--background);
  scrollbar-width: thin;
  &,
  * {
    scrollbar-color: var(--main-color-soft) transparent;
  }
  &.scrollLock {
    scrollbar-color: var(--main-color-grayish) transparent;
  }
  .window {
    overflow-y: auto;
    overscroll-behavior: contain;
    scrollbar-width: thin;
  }
}

svg.stock {
  opacity: 0;
  pointer-events: none;
  position: fixed;
  z-index: -999;
}

%buttonColor {
  color: white;
  background-color: var(--main-color);
  &:hover {
    color: white;
    background-color: var(--main-color-soft);
  }
  &:focus {
    color: white;
    background-color: var(--main-color-strong);
  }
  &:disabled {
    background-color: var(--main-color-soft);
  }
}
button,
.button {
  @extend %userSelectNone;
  padding: 0;
  border: 0;
  outline: none;
  text-decoration: none;
  font-weight: 700;
  &:not(:disabled) {
    @extend %cursor-pointer;
  }
  &.soft-color {
    color: white;
    background-color: var(--main-color-soft);
  }
  &.color {
    @extend %buttonColor;
  }
  &.round {
    padding: 0;
    margin: 0.125rem;
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 9999px;
    display: flex;
    align-items: center;
    justify-content: center;
    &:disabled {
      opacity: 0.6;
    }
    svg,
    .svg {
      fill: white;
      @include square(1.5rem);
    }
  }
  &.link,
  &.miniIcon,
  &.iconSwitch {
    padding: 0;
    background-color: transparent;
    &.margin {
      padding: 0.25rem;
    }
    svg {
      font-size: 1.25rem;
    }
  }
  &.like {
    color: var(--main-color-grayish);
    background-color: transparent;
    &:hover {
      color: var(--main-color-light-grayish);
    }
    &.checked {
      color: var(--warm-color);
      &:hover {
        color: var(--warm-color-hover);
      }
    }
    .count {
      font-size: 1.2em;
      vertical-align: middle;
      margin-left: 0.1em;
    }
    svg {
      width: 1.5em;
      height: 1.5em;
    }
  }
  &.iconSwitch {
    color: var(--main-color);
    &:hover {
      color: var(--main-color-deep);
    }
  }
  &.keyValueEdit {
    @extend .iconSwitch;
    font-size: 1em;
    margin: 0 0.5em;
    display: inline-flex;
    align-items: center;
    svg {
      margin: 0.25em;
    }
    .title {
      line-height: 1.2em;
      font-size: 1.2em;
      margin: 0.1em 0.25em;
    }
  }
  &.miniIcon {
    &:hover {
      opacity: 0.8;
    }
  }
  &.warm {
    color: white;
    background-color: var(--warm-color);
    &:hover {
      background-color: var(--warm-color-hover);
    }
  }
  img {
    max-width: 100%;
  }
  @media (min-width: $tabletWidth) {
    &.round {
      margin: 0.25rem;
      @include square(3rem);
      svg,
      .svg {
        @include square(2rem);
      }
    }
  }
}

a,
.link {
  font: inherit;
  text-decoration: underline;
  word-break: break-all;
  color: var(--link-color);
  &:hover {
    color: var(--link-color-hover);
    &.external::after {
      background-color: var(--link-color-hover);
    }
  }
  &.roundLink {
    color: white;
    display: inline-block;
    padding: 0.4rem 1rem;
    border-radius: 1rem;
    background-color: var(--main-color);
    &.external::after {
      background-color: white;
    }
    &:hover {
      background-color: var(--main-color-soft);
    }
  }
  &.external::after {
    $externalUrl: url("/static/images/svg/external.svg");
    display: inline-block;
    margin-left: 0.2em;
    content: "";
    width: 1em;
    height: 1em;
    -webkit-mask-image: $externalUrl;
    -webkit-mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-position: center;
    mask-image: $externalUrl;
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
    background-color: var(--main-color-strong);
    font-size: 90%;
  }
}

.slider {
  .thumb:focus {
    outline: 0;
  }
}

span.label {
  &::after {
    content: ":";
    margin: 0 0.375rem 0 0.125rem;
  }
}

[hidden],
.hidden {
  display: none !important;
  border: none !important;
}

.ml {
  margin-left: 1rem;
}
.mr {
  margin-right: 1rem;
}
.mt {
  margin-top: 1rem;
}
.mb {
  margin-bottom: 1rem;
}

.ml-s {
  margin-left: 0.5rem;
}
.mr-s {
  margin-right: 0.5rem;
}

.m-c-s > * {
  margin: 0.5rem;
}
.mb-c > * {
  margin-bottom: 1rem;
}

.emoji {
  min-width: 1em;
  height: 1em;
  vertical-align: baseline;
  display: inline-block;
  margin: 0;
}

img {
  object-fit: cover;
  height: auto;
}

.overlay {
  transition: filter 100ms;
  &:hover {
    filter: brightness(0.9);
  }
}

h1 {
  font-size: 2.25rem;
}
h2 {
  font-size: 2.5em;
}
h3 {
  font-size: 1.5rem;
  margin: 2rem auto;
}
.author h3 {
  margin: 1rem auto;
}
.parsed h3 {
  margin: initial;
}
h4 {
  font-size: 1.25rem;
}
.content-base {
  h2,
  h3,
  h4,
  p {
    position: relative;
    button.keyValueEdit {
      position: absolute;
      margin: 0.25rem 0.5rem;
      bottom: 0;
      svg {
        width: 1.1em;
        height: 1.1em;
      }
    }
  }
}

.common-h2 {
  color: var(--main-color);
  margin-bottom: 1rem;
  @media (min-width: $tabletWidth) {
    font-size: 2.25rem;
  }
}

.switch-img {
  position: relative;
  img:not(.normal) {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
  }
  &:hover {
    img {
      &.normal {
        opacity: 0;
      }
      &.hover {
        opacity: 1;
      }
    }
  }
}

.text-left {
  text-align: left;
  @extend %ulolAuto;
}
.text-right {
  text-align: right;
  @extend %ulolAuto;
}

.text-bottom {
  vertical-align: text-bottom;
}

.pre,
.hashtag {
  white-space: pre;
}

.dropzone {
  &.blank {
    background-color: var(--main-color-grayish-fluo);
  }
  &.isDrag {
    background-color: var(--main-color-pale-fluo);
  }
}

.wh-fill,
.wh-all-fill,
.wh-all-fill * {
  width: 100%;
  height: 100%;
}

.rbButtonArea {
  position: fixed;
  right: 0;
  bottom: 0;
  z-index: 50;
  margin: 0.25rem 0.25rem 0.25rem 10rem;
  pointer-events: none;
  > * {
    pointer-events: auto;
  }
  &,
  .list {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: flex-end;
  }
  &.z30 {
    z-index: 30;
  }
  button.round,
  .button.round {
    margin: 0.25rem;
  }
  input {
    font-size: 1rem;
  }
  &.blog {
    input {
      margin: 0.5rem;
    }
    .paging {
      input {
        width: 3.5rem;
        padding: 0.25rem 0.5rem;
      }
      button {
        width: 2.25rem;
        height: 2.25rem;
      }
    }
    .search {
      input {
        width: 10rem;
        padding: 0.25rem 0.5rem;
      }
    }
  }
  .fc & {
    margin-bottom: 1em;
    margin-right: 1em;
    button.round {
      font-size: 4rem;
      width: 3.5rem;
      height: 3.5rem;
      svg {
        width: 0.8em;
        height: 0.8em;
      }
    }
  }
}

.font-small {
  font-size: 0.75em;
}
.font-medium {
  font-size: 1em;
}
.font-large {
  font-size: 1.25em;
}
.font-larger {
  font-size: 1.5em;
}
.font-bold {
  font-weight: bold;
}

.font-large,
.font-larger {
  .list {
    display: flex;
    align-items: center;
    &.column {
      flex-direction: column;
    }
    > * {
      margin: 0.25rem;
    }
  }
}

.dropdown {
  position: relative;
  > button,
  > .button {
    padding: 0.25em 0.5em;
  }
  .listMenu {
    position: absolute;
    z-index: 100;
    text-align: left;
    width: max-content;
    background-color: var(--form-background-color);
    &.right {
      right: 0;
    }
    &:not(.right) {
      left: 0;
    }
    .item,
    [tabindex] {
      padding: 0.25em 0.75em;
      font-size: 1em;
      color: var(--text-color);
      background-color: var(--background-bw);
      span {
        pointer-events: none;
      }
      .check {
        padding: 0 0.25em;
        display: inline-block;
        box-sizing: content-box;
        vertical-align: text-bottom;
        &,
        svg {
          width: 1em;
          height: 1em;
          margin: 0;
        }
      }
    }
    button.item,
    .button.item,
    [tabIndex] {
      @extend %cursor-pointer;
      &:hover,
      &:focus {
        outline: none;
        color: white;
        background-color: var(--main-color);
      }
      svg {
        margin-right: 0.5em;
      }
    }
  }
  .menu > * {
    display: flex;
  }
  &.flex {
    display: flex;
    pointer-events: none;
    :not(div):not(:disabled) {
      pointer-events: auto;
    }
    .listMenu {
      position: inherit;
    }
    &.on {
      flex-direction: column-reverse;
    }
    &.right {
      align-items: flex-end;
    }
    &.row {
      > * {
        display: flex;
      }
      &.right .menu {
        justify-content: flex-start;
        flex-direction: row-reverse;
      }
    }
    &.transparent .listMenu {
      background-color: transparent;
    }
  }
}

input.colorChanger.withDropdown {
  pointer-events: none;
  opacity: 0;
  position: absolute;
}

details {
  position: relative;
  > summary {
    display: list-item;
    padding: 0.4em 1em;
    @extend %cursor-pointer;
    color: white;
    background-color: var(--main-color-deep);
    font-weight: 700;
    border: 0;
    outline: none;
    border-radius: 0.5em;
    min-width: -moz-fit-content;
    min-width: fit-content;
    width: 20em;
    max-width: 80%;
    margin: 0.5em;
    padding-left: 1.2em;
    line-height: 1.5em;
    @extend %userSelectNone;
  }
  > button.close {
    font-size: 0.7em;
    width: 28em;
    max-width: 85%;
    line-height: 2em;
    border-radius: 0.5em;
    margin: 0.5em auto 0.5em 0.5em;
    color: white;
    background-color: var(--main-color-light-grayish);
    &:hover {
      background-color: var(--main-color-pearl-grayish);
    }
  }
  details {
    margin-left: 1em;
  }
}

code {
  display: inline-block;
  background-color: var(--def-main-color-dark-grayish);
  color: white;
  border-radius: 16px;
  padding: 1em 1em;
  max-width: 92vw;
  overflow: auto;
  white-space: pre-wrap;
  box-sizing: border-box;
  width: 99%;
  min-width: unset;
  &.hljs {
    .hljs-string {
      color: var(--def-main-color-strong);
    }
    .hljs-comment {
      color: var(--def-main-color-light-grayish);
    }
    .hljs-title,
    .hljs-keyword {
      color: var(--def-main-color);
    }
    .hljs-selector-class {
      color: var(--def-sub-color-soft);
    }
    .hljs-variable,
    .hljs-number {
      color: var(--def-main-color-highlight);
    }
    .hljs-selector-pseudo {
      color: var(--def-main-color-soft);
    }
    &.language-css,
    &.language-scss {
      .hljs-attribute {
        color: var(--def-sub-color-soft);
      }
    }
  }
}

.InPageMenu {
  position: fixed;
  z-index: 25;
  right: 0;
  bottom: 0;
  margin-bottom: 0.5rem;
  padding-right: 0.25rem;
  transition: transform 100ms;
  &.hide {
    transform: translateX(100%);
  }
  .item {
    display: flex;
    flex-direction: row;
    align-items: baseline;
    padding: 0.25rem;
    min-width: 8rem;
    font-size: 1em;
    text-align: left;
    font-weight: 900;
    color: var(--main-color-soft);
    &:hover {
      color: var(--main-color);
    }
    &.current {
      color: var(--main-color-strong);
      &:hover {
        color: var(--main-color-deep);
      }
    }
    .cursor {
      width: 0.75rem;
      height: 0.75rem;
      margin-right: 0.5rem;
      svg {
        margin: auto;
        fill: var(--main-color);
        height: 100%;
      }
    }
    .name {
      flex: 1;
      & > span {
        margin-right: 0.5rem;
      }
    }
    @media (min-width: $tabletWidth) {
      min-width: 11rem;
      font-size: 1.25rem;
      .cursor {
        height: 1rem;
      }
    }
  }
  .background {
    background-color: var(--background);
    opacity: 0.7;
    position: absolute;
    top: 0;
    z-index: -10;
    width: 100%;
    height: 100%;
    @media (min-width: 1800px) {
      display: none;
    }
  }
}

.content-base {
  padding-top: 3.5rem;
  padding-bottom: 2rem;
  text-align: center;
  .content-parent {
    margin-left: auto;
    margin-right: auto;
    min-height: 70vh;
    min-height: 50vh;
    > *:not(.wide) {
      max-width: 1280px;
      margin-left: auto;
      margin-right: auto;
    }
  }
}

@keyframes SiteMenuInAnim {
  from {
    transform: scaleX(0.9) scaleY(0);
  }
  to {
    transform: scaleX(1) scaleY(1);
  }
}
@keyframes SiteMenuOutAnim {
  from {
    transform: scaleX(1) scaleY(1);
  }
  to {
    transform: scaleX(0.9) scaleY(0);
  }
}

$headerHeight: 3.5rem;
html {
  scroll-padding-top: #{$headerHeight + 1rem};
}
%headerSwitch {
  display: flex;
  .item {
    height: 2.25rem;
    padding: 0;
    min-width: 33.33%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--main-color-strong);
    &:hover,
    &:focus {
      color: white;
      background-color: var(--main-color-soft);
      outline: none;
    }
    svg {
      width: auto;
      height: 1.5rem;
      margin: 0;
    }
    &.disabled {
      svg {
        opacity: 0.4;
      }
    }
  }
}
header.siteHeader {
  height: #{$headerHeight};
  position: fixed;
  display: flex;
  align-items: center;
  width: 100%;
  max-width: var(--ct-width);
  z-index: 30;
  > *:not(.list) {
    height: 3.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  @extend %windowMinWidth;
  .backButton,
  .siteMenu {
    margin: auto 0.125rem;
    width: 3.25rem;
  }
  .backButton {
    svg {
      height: 2rem;
      width: 2rem;
    }
    a {
      @extend %userSelectNone;
      --link-color: var(--main-color-soft);
      --link-color-hover: var(--main-color-pale);
    }
  }
  .title-container {
    flex: 1;
    @extend %a-line-none;
    h1 {
      margin: 0;
      display: flex;
    }
    img {
      height: 2.5rem;
    }
    #siteTitle {
      font-size: 1.5rem;
      line-height: 2.5rem;
      color: var(--main-color);
    }
  }
  .siteMenu {
    font-weight: 800;
    z-index: 1;
    .button {
      width: 3.25rem;
      height: 3.25rem;
      display: block;
      fill: var(--main-color);
      background-color: var(--main-color);
      @extend %userSelectNone;
      &:hover {
        fill: var(--main-color-soft);
      }
      &:focus {
        fill: var(--main-color-strong);
        outline: none;
      }
    }
    .enter {
      transform-origin: right top;
      animation: SiteMenuInAnim ease forwards;
    }
    .exit {
      transform-origin: right top;
      animation: SiteMenuOutAnim ease forwards;
    }
    .listMenu {
      margin-top: 0.125rem;
      background-color: rgba(255, 255, 255, 0.9);
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      flex-direction: column;
      text-align: left;
      @extend %userSelectNone;
      .item {
        font-size: 1.25rem;
        min-width: 12rem;
        padding: 0.5rem 1rem;
        color: var(--main-color-strong);
        &:hover,
        &:focus {
          color: white;
          background-color: var(--main-color-soft);
          outline: none;
        }
      }
      .switch {
        @extend %headerSwitch;
      }
      @extend %a-line-none;
    }
  }
  .headerBackground {
    position: absolute;
    top: 0;
    margin: 0;
    width: 100%;
    height: 100%;
    background-color: var(--background);
    opacity: 0.9;
    z-index: -10;
  }
}

footer {
  margin-top: 2rem;
  padding-bottom: 3rem;
  text-align: center;
  .copyright {
    font-family: "Mandali";
  }
  ul.footerLink {
    padding: 1rem 0;
    margin: auto;
    text-align: center;
    li {
      display: inline-block;
      margin: 0 0.25rem;
      a .mask,
      button {
        width: 2rem;
        height: 2rem;
        border-radius: 2rem;
        background-color: var(--main-color);
        padding: 0;
        svg {
          width: 1.375rem;
          height: 1.375rem;
        }
      }
      a:hover .mask,
      button:hover {
        background-color: var(--main-color-soft);
      }
    }
  }
}

@media (min-width: $tabletWidth) {
  $headerHeight: 4rem;
  html {
    scroll-padding-top: #{$headerHeight + 1rem};
  }
  header.siteHeader {
    height: #{$headerHeight};
    .title-container {
      text-align: center;
      img {
        height: 2.75rem;
      }
    }
    .backButton,
    .siteMenu {
      margin: auto 0.25rem;
      width: 3.5rem;
    }
    .siteMenu {
      .button {
        width: 3.5rem;
        height: 3.5rem;
      }
    }
  }
  .content-base {
    padding-top: 4rem;
  }
}

.topPage {
  margin: 1.5rem auto;
  .topImageArea {
    height: 48rem;
    min-height: 30rem;
    max-height: 70vh;
    display: flex;
    position: relative;
    & > * {
      width: 100%;
      height: 100%;
    }
    img {
      position: absolute;
    }
    & > div {
      background-color: var(--main-color-grayish-fluo);
    }
  }
  h1 {
    font-size: 0.9em;
    margin: 1.5rem 0;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
  }
  @extend %a-line-none;
  &.article img {
    max-height: 90dvh;
    object-fit: contain;
  }
  ul {
    width: auto;
    margin: auto;
    $padding-tb: 0.5rem;
    padding: #{$padding-tb} 1rem;
    max-width: 1600px;
    &.topButtons {
      @include GridList(
        "*",
        2,
        $mobileWidth,
        $tabletWidth,
        $miniDesktopWidth,
        $desktopWidth
      );
    }
    &.bannerArea {
      @include GridList(
        "li",
        1,
        $mobileWidth,
        $miniDesktopWidth,
        $desktopWidth
      );
    }
    li {
      margin: 0.25rem;
      display: inline;
      img {
        width: 100%;
      }
    }
  }
  @media (min-width: $desktopWidth) {
    ul {
      flex-direction: row;
    }
  }
  .links {
    margin: 1rem auto;
  }
  h3 {
    margin: 1rem;
    font-size: 1.75rem;
    line-height: 2rem;
    a,
    a:hover {
      color: var(--main-color-strong);
    }
  }
  .blog {
    max-width: 90rem;
    margin: 1.5rem auto;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    flex-wrap: wrap;
    & > .list {
      flex: 1 1 0%;
      font-size: 1.25rem;
      line-height: 1.75rem;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      text-align: left;
      max-width: 32rem;
      height: 8rem;
      .article {
        margin: 0.25rem 0.5rem;
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        .date {
          margin-right: 0.5rem;
          min-width: 5em;
          text-align: right;
        }
        .title {
          margin-right: 0.5rem;
          text-align: left;
          flex: 1;
        }
      }
    }
    @media (min-width: 1024px) {
      flex-direction: row;
      & > .title {
        margin: 0 0.5rem;
      }
      & > .list {
        margin: 0;
        flex-direction: row;
        max-width: max-content;
        height: auto;
      }
    }
  }
}

.HomeImage {
  height: 48rem;
  // min-width: 30rem;
  max-height: 70vh;
  .wrapper {
    height: 100%;
    position: relative;
    .image {
      width: 100%;
      height: 100%;
      left: 0;
      position: absolute;
      &.enter {
        z-index: 1;
        opacity: 0;
      }
      &.enter-active {
        opacity: 1;
        transition: opacity 750ms;
      }
    }
  }
  .dummy {
    height: 100%;
    background-color: var(--main-color-grayish-fluo);
  }
  .gage {
    height: 0.75rem;
    position: absolute;
    bottom: 0;
    z-index: 1;
    animation: SimpleGageAnim linear backwards;
    opacity: 0.25;
    background-color: var(--background-bw);
  }
}

.laymic_root {
  z-index: 10000;
}

input,
textarea,
.preview-area,
select {
  border-radius: 0.5em;
  box-sizing: border-box;
  padding: 0.125rem 0.5rem;
  color: var(--text-color);
  background: var(--background-input);
  border: solid 1px var(--main-color-grayish);
  &:not(:disabled):hover {
    border-color: var(--main-color-deep);
  }
}

.button-general {
  line-height: 1em;
  padding: 0.5em 1em;
  color: white;
  background-color: var(--main-color);
  display: flex;
  align-items: center;
  width: fit-content;
  margin: auto;
  &:hover {
    background-color: var(--main-color-strong);
  }
  &:disabled {
    background-color: var(--main-color-light-grayish);
  }
  &.color-warm {
    color: white;
    background-color: var(--warm-color);
    &:hover {
      background-color: var(--warm-color-hover);
    }
  }
}

button,
.button {
  &.squared.item {
    text-align: left;
    display: flex;
    align-items: center;
  }
  &.labels {
    @extend .button-general;
    padding: 0.5em;
    text-align: left;
    > svg:first-child {
      margin-left: 0.1em;
      margin-right: 0.5em;
      flex: none;
    }
    div {
      display: flex;
      flex-wrap: wrap;
    }
  }
}

form {
  button,
  .button {
    border-radius: 0.5rem;
    &.squared {
      border-radius: 0;
    }
  }
  select {
    padding: 0.25rem;
  }
}

*:focus-visible {
  outline: solid 1px var(--main-color-dark);
}

.parsed {
  h1,
  h2 {
    margin-top: 1em;
    @extend .color-main;
    @extend .en-title-font;
  }
  h3,
  h4 {
    margin-top: 0.5em;
    @extend .color-deep;
  }
  &.blog > * {
    margin: 1.5rem auto;
  }
  p {
    white-space: pre-line;
  }
  h4 {
    color: var(--main-color-dark);
  }
  img {
    max-width: 100%;
  }
}

.preview-area {
  max-height: 40rem;
  overflow-y: scroll;
  .parsed p:first-child {
    margin-top: 0;
  }
  ul {
    margin-left: 0;
  }
}

.characterPage {
  max-width: 1400px;
  @include commonHeader();
  .charaList {
    margin: 0 auto;
    width: 95%;
    @include GridList("li", 2, $tabletWidth, $desktopWidth);
    &.extend {
      font-size: 0.625rem;
      @include GridList(
        "li",
        4,
        $mobileWidth,
        $tabletWidth,
        $miniDesktopWidth,
        $desktopWidth
      );
    }
    li .item {
      display: flex;
      flex-direction: column;
      font-size: 1.25em;
      text-decoration-line: none;
      color: var(--main-color);
      padding: 0.75em;
      .inner {
        position: relative;
        img {
          width: 100%;
          height: 100%;
          position: absolute;
          top: 0;
          left: 0;
          object-fit: cover;
          &.noimage {
            background-color: var(--main-color-pearl-grayish);
          }
        }
        &::before {
          content: "";
          padding-top: 100%;
          display: block;
        }
      }
      &:hover {
        background-color: var(--main-color-pale-fluo);
        color: var(--main-color-deep);
      }
      .name {
        text-align: center;
        display: block;
        margin: 0.5em auto 0;
        max-width: 90%;
      }
      @media (min-width: $tabletWidth) {
        font-size: 1.5em;
      }
    }
    @media (min-width: $desktopWidth) {
      width: 100%;
    }
  }
  .beforeAfter {
    display: flex;
    justify-content: space-between;
    margin: 0.25rem 0.5rem;
    a {
      display: flex;
      align-items: center;
      text-decoration-line: none;
      height: 2rem;
      font-size: 1.25rem;
      img {
        font-size: 1.5rem;
        margin-right: 0.5rem;
      }
    }
    .before .cursor {
      margin-right: 0.5rem;
    }
    .after .cursor {
      margin-left: 0.5rem;
    }
  }
  .charaDetail {
    .head {
      width: 100%;
      margin: 0 auto;
      padding: 1rem 0;
      position: relative;
      display: flex;
      flex-direction: column;
      justify-content: center;
      > * {
        color: var(--main-color-strong);
        margin: 0.15rem auto;
        padding: 0.1rem 0.3rem;
      }
      .headerImage {
        margin: 0;
        padding: 0;
        position: absolute;
        display: inline-block;
        z-index: -1;
        width: 100%;
        height: 100%;
      }
      &.includeHeaderImage {
        min-height: 10rem;
        & > * {
          color: var(--main-color-strong);
          background-color: var(--text-background);
        }
      }
      .title {
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 1.875rem;
        height: 2.5rem;
        img {
          font-size: 2.25rem;
          margin-right: 0.5rem;
        }
      }
      .overview {
        font-size: 1.25rem;
        line-height: 1.5rem;
      }
    }
    .mainImage {
      display: inline-block;
      max-width: 100%;
      box-sizing: border-box;
    }
    .tags {
      & > * {
        margin: 0.25rem;
      }
    }
    .parsed {
      margin: 0.5rem auto;
    }
    button.like {
      margin: 0.5rem;
    }
  }
  .edit {
    max-width: 44rem;
    margin: auto;
    padding: 0 0.5rem;
    img.icon {
      width: 96px;
      height: 96px;
    }
    .flex > input {
      margin: 0.125rem;
    }
    * {
      font-size: 1.125rem;
    }
    > * {
      margin: 0.75rem 0;
    }
    input,
    textarea {
      padding: 0.2rem 0.4rem;
    }
    .charaIcon {
      font-size: 2.25rem;
    }
    > .flex,
    .flex.center {
      flex-wrap: wrap;
    }
    .flex {
      > * {
        &.mini {
          width: 8rem;
        }
        .label-l {
          flex: 0.5;
          word-break: keep-all;
        }
      }
    }
    textarea {
      min-width: -moz-fit-content;
      min-width: fit-content;
      width: 100%;
    }
    .postTextarea {
      & > * {
        min-height: 8rem;
        height: 16rem;
      }
    }
    button.setter {
      display: flex;
      margin: 0.25rem;
      margin-left: 0.5rem;
      &:not(.color) {
        background-color: transparent;
      }
      &:hover img {
        filter: brightness(0.9);
      }
      svg,
      img {
        margin: 0;
        display: inline-block;
        width: 1.25em;
        height: 1.25em;
        font-size: 1.5em;
        padding: 0.1em 0.2em;
      }
    }
    button:not(.normal) {
      padding: 0.4em 1.2em;
      display: inline-flex;
      line-height: 1.25em;
      * {
        font-size: 1em;
      }
      svg {
        height: 1.25em;
        width: 1.25em;
      }
    }
  }
}

iframe {
  margin: 0;
  border: none;
  max-width: 100%;
  .preview & {
    background: var(--main-color-dark-grayish);
  }
  &.contactForm {
    border-radius: 1rem;
    background: var(--background-color);
    @extend %backgroundTransition;
  }
}

.fixedCenter {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.modal-background {
  background-color: var(--lightbox-background);
  -webkit-tap-highlight-color: transparent;
  z-index: -1;
  @extend .fixedCenter;
}

$translucent-button-default-color: rgba(255, 255, 255, 0.7);
$translucent-button-default-bg: rgba(0, 0, 0, 0.1);
$translucent-button-hover-color: rgba(255, 255, 255, 0.8);
$translucent-button-hover-bg: rgba(0, 0, 0, 0.2);
.translucent-button {
  display: flex;
  width: 5em;
  height: 5em;
  margin: 0.75em;
  position: absolute;
  border-radius: 8rem;
  justify-content: center;
  align-items: center;
  color: $translucent-button-default-color;
  background-color: $translucent-button-default-bg;
  transition:
    color 200ms,
    background-color 200ms;
  > * {
    width: 100%;
    height: 100%;
  }
  > * {
    width: 70%;
    height: 70%;
  }
  &:hover {
    color: $translucent-button-hover-color;
    background-color: $translucent-button-hover-bg;
  }
}

select {
  &.noBorder {
    background-color: transparent;
    border: none;
  }
  &.year {
    font-size: 1.25rem;
    margin: 0.5rem;
    min-width: 4rem;
    color: var(--main-color-strong);
    option {
      color: var(--main-color-dark);
    }
  }
}

%galleryTransition {
  transition-property:
    color, background-color, border-color, text-decoration-color, fill, stroke,
    opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.galleryLabel {
  position: relative;
  display: flex;
  flex-direction: column;
  &.outLabel {
    padding-top: 1.5rem;
    padding-bottom: 0.5rem;
  }
  h2 {
    display: inline-block;
    padding: 1rem 0;
    margin: auto;
    color: var(--main-color);
    font-size: 1.5rem;
    text-align: center;
    line-height: 2.25rem;
  }
  h4 {
    display: inline-block;
    color: var(--main-color-soft);
    margin: auto;
  }
  .count {
    font-size: 1.25rem;
    color: var(--main-color);
    height: 100%;
    display: flex;
    align-items: center;
    position: absolute;
    margin-right: 1rem;
    top: 0;
    right: 0;
  }
  @media (min-width: $tabletWidth) {
    h2 {
      font-size: 1.875rem;
    }
    .count {
      margin-right: 2rem;
    }
  }
}

div.banner {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.galleryPage {
  padding-bottom: 2rem;
}
.galleryContainer {
  width: 100%;
  max-width: 1400px;
  margin: 1rem auto;
  @include commonHeader();
  @extend %a-line-none;
  .galleryLabel {
    h2 {
      font-size: 2.5em;
      // line-height: 2.25rem;
    }
  }
  .galleryList {
    margin: auto;
    @extend %userSelectNone;
    &.grid {
      column-gap: 0.1rem;
      row-gap: 0.1rem;
      @include GridList("*", 4, $tabletWidth);
      .item {
        aspect-ratio: 1;
      }
    }
    &.banner {
      @include GridList("*", 1, $tabletWidth);
    }
    .loadingNow {
      color: var(--main-color-soft);
      margin: 1rem auto;
    }
    .item {
      overflow: hidden;
      position: relative;
      &,
      & > img,
      svg {
        object-fit: cover;
        top: 0;
        width: 100%;
        height: 100%;
        @extend %galleryTransition;
      }
      .gallery-button-more {
        fill: var(--main-color-soft);
        @extend %galleryTransition;
      }
      .ribbon {
        font-family:
          "Gill Sans", "Gill Sans MT", Calibri, "Trebuchet MS", sans-serif;
        padding: 0.1rem 0.25rem;
        vertical-align: middle;
        position: absolute;
        top: 0;
        right: 0;
        z-index: 1;
        color: white;
        font-size: 0.5em;
        background-color: rgb(126, 130, 127);
        &.new {
          background-color: rgb(244, 79, 79);
        }
        &.update {
          background-color: rgb(244, 145, 79);
        }
        &.draft {
          background-color: rgb(120, 131, 104);
        }
        &.schedule {
          background-color: rgb(89, 171, 128);
        }
        @media (min-width: $tabletWidth) {
          font-size: 1em;
        }
      }
      .translucent-special-button {
        @extend .translucent-button;
        background-color: rgb(100 110 88 / 74%);
        max-width: 35%;
        max-height: 35%;
        margin: 0.25rem;
        z-index: 10;
        right: 0;
        bottom: 0;
        pointer-events: none;
        @media (min-width: $tabletWidth) {
          margin: 0.75rem;
        }
      }
      &:hover {
        .translucent-special-button {
          background-color: rgba(86, 104, 63, 0.85);
        }
        img {
          transform: scale(1.03);
          filter: brightness(0.95);
          transition-duration: 150ms;
        }
        .gallery-button-more {
          fill: var(--main-color-pale);
        }
      }
    }
  }
  .dropzone.blank {
    margin: 2rem;
    min-height: 20rem;
    display: flex;
    justify-content: center;
    align-items: center;
  }
}

$soundBoxWidth: 18rem;
$soundBoxHeight: 10rem;
.soundController {
  position: fixed;
  left: -#{$soundBoxWidth};
  bottom: 0;
  z-index: 40;
  transition: left 250ms;
  display: none;
  pointer-events: none;
  > * {
    pointer-events: all;
  }
  &.show {
    display: flex;
    flex-direction: row-reverse;
    align-items: flex-end;
  }
  .mini {
    display: flex;
    justify-content: flex-end;
    flex-direction: column;
    margin: 0.3rem;
    button {
      margin: 0.2rem;
      border: solid 1px var(--background);
      @include square(3rem);
      svg {
        @include square(2rem);
      }
    }
  }
  button {
    margin: 0 0.25rem;
  }
  .box {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    background-color: var(--background-bw);
    width: #{$soundBoxWidth};
    min-height: #{$soundBoxHeight};
    .player {
      display: none;
    }
  }
  .slider:not(.disabled) {
    @extend %cursor-pointer;
  }
  &.showBox {
    left: 0;
    .mini {
      .player {
        display: none;
      }
    }
    .box {
      .player {
        margin: 0 0.25rem;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        .controll {
          margin: 1rem 0.5rem;
          display: flex;
          & > div {
            display: flex;
            justify-content: center;
            button {
              margin: 0;
            }
          }
          .right,
          .left {
            flex: 1;
          }
          .center {
            flex: 2;
            justify-content: space-around;
          }
        }
        .meta {
          margin: 1.25rem auto 0.25rem;
          display: inline-flex;
          flex-direction: column;
          align-items: center;
          text-align: center;
          justify-content: center;
          @extend %auto-phrase;
          p {
            margin: 0.25rem;
            margin-top: 0;
          }
          .title {
            display: flex;
            align-items: center;
            min-height: 2.75rem;
            font-size: 1.25rem;
          }
          .wait {
            font-size: 1.2rem;
            margin-top: 0.5rem;
            margin-bottom: 0.5rem;
          }
        }
        .time {
          display: flex;
          flex-direction: column;
          box-sizing: border-box;
          padding: 0 1rem;
          width: 100%;
          .status {
            margin-bottom: 0.5rem;
            .text {
              display: flex;
              justify-content: center;
              .duration {
                text-align: left;
                min-width: 3em;
              }
              .slash {
                margin: 0 0.25rem;
              }
              .current {
                text-align: right;
                min-width: 3em;
              }
            }
          }
        }
        .volume {
          display: flex;
          align-items: center;
          position: relative;
          .sliderBox {
            $height: 3rem;
            top: $height;
            position: absolute;
            background-color: var(--background-bw);
            transform: translateY(#{-3-$height});
            height: #{$height};
            width: 8rem;
            border-radius: 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            button {
              margin-right: 0.25rem;
              svg {
                width: 1.75rem;
                height: 1.75rem;
              }
            }
            &.disabled {
              display: none;
            }
            .slider {
              height: 1.5rem;
              width: 4rem;
              .clip {
                height: 100%;
                width: 100%;
                clip-path: polygon(100% 0%, 100% 0%, 100% 100%, 0% 100%);
              }
              .track {
                height: 100%;
                @extend %slider-track-background;
              }
              .track-0 {
                background-color: var(--main-color);
              }
              &.disabled {
                display: none;
              }
            }
          }
        }
      }
      button {
        background-color: transparent;
        svg {
          fill: var(--main-color-soft);
          stroke: var(--main-color-soft);
          @include square(2.5rem);
          --background: var(--background-bw);
          &.small {
            @include square(2rem);
          }
        }
        &.large svg {
          @include square(3rem);
        }
        &.small svg {
          @include square(2rem);
        }
        &.round {
          background-color: var(--main-color-soft);
          @include square(2.5rem);
          &.large {
            @include square(3rem);
          }
          &.small {
            @include square(2rem);
          }
          svg {
            fill: white;
            stroke: white;
            --background: var(--main-color-soft);
          }
        }
      }
    }
  }
}
.soundPage {
  .title {
    font-size: 2rem;
    @extend .common-h2;
  }
  .playlist {
    margin: 1.5rem auto;
    .label {
      margin: 1rem;
      color: var(--main-color-dark);
      font-size: 1.875rem;
    }
    .list {
      margin: auto;
      max-width: 56rem;
      @include GridList("div", 1, $tabletWidth);
      .item {
        width: 100%;
        display: flex;
        align-items: center;
        font-weight: bold;
        &:hover {
          background-color: var(--main-color-pale-fluo);
        }
        .cursor {
          width: 2rem;
          flex: 1;
          color: var(--main-color-soft);
          svg {
            margin: auto;
            fill: var(--main-color-soft);
          }
        }
        &.paused .cursor svg {
          fill: var(--main-color-pale);
        }
        .name {
          flex: 10;
          font-size: 1.25rem;
          color: var(--main-color-deep);
          text-align: left;
          height: 4.5rem;
          vertical-align: middle;
          display: flex;
          align-items: center;
          @extend %auto-phrase;
        }
        .button {
          margin-right: 1rem;
          @include square(2.25rem);
          svg {
            @include square(2rem);
          }
        }
      }
    }
  }
  form {
    label {
      display: flex;
      .label {
        min-width: 8rem;
        text-align: right;
      }
      input {
        flex: 1;
      }
    }
  }
}

.label,
.label-s {
  @include MarginInner(1, "b");
}
.label-l {
  @include MarginInner(2, "r");
}
.label-sl {
  @include MarginInner(1, "r");
  > * {
    font-size: 1.25em;
  }
}
.label,
.label span,
.label-l {
  &,
  input,
  select,
  button,
  textarea {
    font-size: 1em;
  }
}
textarea {
  display: block;
}

label,
.label {
  &.simple {
    display: flex;
    align-items: center;
    button {
      display: inline-block;
      margin-left: 0.5rem;
      padding: 0 0.5rem;
      color: var(--main-color-strong);
      background-color: transparent;
      border: none;
      font-weight: normal;
      &:hover {
        color: var(--main-color-dark);
      }
    }
  }
}

.modalClose {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 50;
  margin: 0.5rem;
  width: 3rem;
  height: 3rem;
  path {
    opacity: 0.7;
  }
  @media (min-width: $tabletWidth) {
    width: 3.5rem;
    height: 3.5rem;
    margin: 0.5rem;
  }
}

.modalEntire {
  position: fixed;
  z-index: 15000;
  display: flex;
  justify-content: center;
  align-items: center;
  &.gallery {
    z-index: 20000;
  }
  .modal {
    background-color: var(--modal-window-background);
    padding: 1rem;
    border-radius: 1rem;
    position: relative;
    &.full {
      padding: 0;
      border-radius: 0;
    }
    form {
      display: flex;
      flex-direction: column;
      max-width: 100vw;
      .absolute {
        z-index: 1;
      }
      &,
      input,
      button,
      textarea {
        font-size: 1em;
        line-height: 1.2em;
      }
      svg {
        font-size: 1.1em;
      }
      %h {
        font-size: 1.25em;
        line-height: 1.25em;
        margin: 1rem 0.5rem 0.5rem;
        @extend %auto-phrase;
      }
      h2 {
        @extend %h;
      }
      %c {
        margin: 0.25rem;
      }
      & > * {
        @extend %c;
      }
      button.labels {
        margin: 0.25rem auto;
      }
      ul {
        padding-left: 2rem;
        li {
          @extend %c;
        }
        @media (max-width: #{$tabletWidth - 1}) {
          padding-left: 1rem;
        }
      }
      details {
        & > * {
          @extend %c;
        }
        label {
          display: flex;
          align-items: center;
          width: 100%;
          input {
            flex: 1;
            width: inherit;
          }
        }
        summary {
          @extend %h;
          margin-left: 0.25rem;
          padding: 0;
          color: var(--text-color);
          background-color: transparent;
        }
      }
      @media (min-width: $tabletWidth) {
        &.window {
          min-width: 20rem;
        }
        button.labels {
          svg {
            font-size: 1.25em;
          }
        }
      }
    }
    &.keyValueEdit {
      .private {
        display: flex;
        align-items: center;
      }
      .postTextarea > textarea {
        width: 36rem;
        min-height: 12rem;
        max-width: 100%;
        border-radius: 0.25rem;
        padding: 0.125rem;
        &.preview-area {
          display: block;
        }
      }
      .setterImage {
        img {
          height: 16rem;
        }
        .selectGallery {
          margin: 0.5rem 1rem;
        }
      }
    }
    .actions {
      display: flex;
      justify-content: space-evenly;
      button {
        @extend .button-general;
      }
    }
    .send {
      padding: 0.25em;
      @extend %buttonColor;
    }
    &.window {
      margin-top: 3.5rem;
      margin-bottom: 1rem;
      max-height: 85vh;
      max-height: 85dvh;
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
      align-content: stretch;
      overflow-y: auto;
      &.middle {
        margin-bottom: 3.5rem;
      }
      &.half-middle {
        margin-bottom: 2rem;
      }
      &.switch {
        @media (min-width: $tabletWidth) {
          margin-top: 4rem;
          margin-bottom: 1.5rem;
          flex-direction: row;
        }
      }
      &.large {
        max-height: 90vh;
        max-height: 90dvh;
        @media (min-width: $tabletWidth) {
          position: absolute;
          top: 0;
          bottom: 0;
        }
      }
    }
  }
  &.enter {
    animation: FadeInAnim linear forwards;
  }
  &.exit {
    animation: FadeOutAnim linear forwards;
  }
}

#image_viewer {
  $thisMobileWidth: #{$tabletWidth};
  position: fixed;
  z-index: 40;
  .enter {
    animation: FadeInAnim linear forwards;
  }
  .exit {
    animation: FadeOutAnim linear forwards;
  }
  .viewer {
    @extend .modal-background;
    // width: 100%;
    // height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    & > div {
      width: 100%;
      position: relative;
      pointer-events: none;
      > * {
        pointer-events: all;
      }
      @media (min-width: $thisMobileWidth) {
        height: 100%;
      }
    }
  }
  .modal {
    width: 100%;
    background-color: transparent;
  }
  .preview {
    width: 100%;
    background-color: var(--lightbox-background-preview);
    position: relative;
    .imageArea {
      display: flex;
      align-items: center;
      flex: 1 1 auto;
      img {
        object-fit: contain;
      }
    }
    .sketchfab-embed-wrapper iframe {
      min-height: 64vh;
    }
    &:hover .hover-visible {
      color: $translucent-button-default-color;
      background-color: $translucent-button-default-bg;
    }
    .hover-visible {
      color: transparent;
      background-color: transparent;
      &:hover {
        color: $translucent-button-hover-color;
        background-color: $translucent-button-hover-bg;
      }
    }
    .fullscreen {
      top: 0;
      right: 0;
    }
    .open {
      bottom: 0;
      right: 0;
      width: 6rem;
      height: 6rem;
    }
    img,
    iframe {
      max-height: 64vh;
    }
    @media (min-width: $thisMobileWidth) {
      max-height: 100%;
      overflow: hidden;
      img {
        max-height: max-content;
      }
      iframe {
        max-height: initial;
      }
      .open {
        width: 8rem;
        height: 8rem;
      }
    }
  }
  .infoArea {
    background-color: var(--modal-window-background);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    @media (min-width: $thisMobileWidth) {
      min-width: 30em;
      width: 40vw;
    }
    .info {
      display: flex;
      flex-direction: column;
      text-align: center;
      flex: 1;
      width: 100%;
      box-sizing: border-box;
      padding: 0.5rem;
      @media (min-width: $thisMobileWidth) {
        padding: 0.5rem 1rem;
      }
      .title {
        margin: 2rem 0.25rem 1rem;
        text-align: center;
        color: var(--main-color-deep);
        word-break: break-all;
        font-size: 1.5rem;
      }
      .description {
        font-size: 1.25rem;
        margin: 0 0.5rem;
        p {
          margin: 1rem auto;
          white-space: pre-line;
        }
      }
      .tagList {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        margin-bottom: 1rem;
        font-size: 1.25rem;
        a {
          margin: 0.25rem 0.5rem;
          display: inline-flex;
          align-items: center;
          text-decoration-line: none;
          &.other {
            --link-color: var(--main-color-dark);
            --link-color-hover: var(--main-color-strong);
          }
        }
      }
      .link {
        font-size: 1.25rem;
        a {
          text-decoration-line: underline;
          font-family: sans-serif;
        }
      }

      .right {
        color: var(--main-color-grayish);
        margin-top: 1rem;
        margin-bottom: 0.5rem;
        display: flex;
        justify-content: flex-end;
        & > * {
          margin-right: 1rem;
        }
        .time {
          margin-right: 1rem;
        }
        .copyright > *:not(:last-child) {
          margin-right: 0.5rem;
        }
      }
      @media (min-width: $thisMobileWidth) {
        text-align: left;
        display: flex;
        overflow-y: auto;
        .title {
          font-size: 1.875rem;
        }
        .description {
          font-size: 1.125rem;
          margin: 0 1rem;
        }
      }
    }
    .paging {
      display: flex;
      flex-shrink: 0;
      margin-bottom: 0;
      width: 100%;
      min-height: 1rem;
      > *:not(.flex-1) {
        height: 4.5rem;
        padding-left: 0.5rem;
        padding-right: 0.5rem;
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        &:first-child {
          justify-content: flex-start;
        }
        &:last-child {
          justify-content: flex-end;
        }
      }
      a {
        text-decoration-line: none;
        &.prev .cursor {
          margin-right: 0.5rem;
        }
        &.next .cursor {
          margin-left: 0.5rem;
        }
        &:hover {
          color: var(--main-color-deep);
          background-color: var(--main-color-pale-fluo);
        }
      }
    }
    form.edit {
      text-align: left;
      padding: 0.5rem;
      margin: 0;
      > * {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        margin-bottom: 1rem;
        &:first-child {
          margin-top: 1rem;
        }
      }
      label,
      .label {
        @extend label, .simple;
      }
      input[type="text"] {
        padding: 0.25rem 0.5rem;
      }
      input,
      select,
      textarea,
      .preview-area {
        display: inline-block;
        border-radius: 0.25rem;
        padding: 0.125rem;
      }
      .wide,
      .postTextarea {
        padding: 0 0.25rem;
        width: 100%;
        > input,
        > textarea,
        > .preview-area {
          display: block;
          width: 100%;
        }
      }
      .description {
        min-height: 8rem;
      }
      .positionPreview {
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        .window {
          @extend %userSelectNone;
          @extend %cursor-move;
          background-color: var(--background-bw);
          position: absolute;
          width: 10em;
          height: 7em;
          bottom: 1.5em;
          padding: 0.25em;
          &,
          div {
            display: flex;
            flex-wrap: wrap;
            align-items: flex-end;
          }
          & {
            justify-content: space-evenly;
            flex-direction: row;
          }
          div {
            flex-direction: column;
            align-items: flex-start;
            align-content: center;
          }
          img {
            pointer-events: none;
            object-fit: cover;
            &.vertical {
              width: 3em;
              height: 6em;
            }
            &.square {
              width: 3.75em;
              height: 3.75em;
              margin-bottom: 0.25em;
            }
            &.landscape {
              width: 6em;
              height: 2em;
            }
          }
        }
      }
      @media (min-width: $thisMobileWidth) {
        text-align: left;
        overflow-y: auto;
        .title {
          font-size: 1.25rem;
        }
        textarea.description {
          font-size: 1.125rem;
        }
      }
    }
  }
}

.sketchfab-embed-wrapper {
  iframe {
    width: 100%;
    min-height: 36em;
  }
  #image_viewer & {
    iframe {
      min-height: min-content;
    }
    p {
      display: none;
    }
  }
}

.setterImage {
  position: relative;
  .selectGallery {
    position: absolute;
    bottom: 0;
    right: 0;
    z-index: 5;
    margin: 0;
    width: 4em;
    height: 4em;
    max-height: 100%;
  }
}

.worksPage {
  .gallery h2 {
    margin-bottom: 0;
  }
  .linkPage h3 {
    font-size: 2.5em;
  }
}

.aboutPage {
  h2 {
    font-size: 1.75rem;
  }
  h3 {
    font-size: 2rem;
  }
  h4 {
    font-size: 1.25rem;
    margin: 1rem auto;
    font-family: sans-serif;
  }
  .author {
    h3 {
      font-size: 2.75rem;
    }
    .on-en-prop {
      display: flex;
      justify-content: center;
      margin: 1rem auto;
      > * {
        margin: 0 0.5em;
        font-size: 1.5rem;
      }
    }
    .on-en-prop {
      button {
        margin: 0;
        bottom: 0;
        svg {
          margin-left: 0.15em;
        }
      }
    }
    .body {
      margin: 1rem auto;
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: center;
      > * {
        margin: 1rem;
      }
      .description {
        display: flex;
        flex-direction: column-reverse;
        justify-content: flex-end;
        align-items: flex-end;
        button.keyValueEdit {
          margin-top: 1rem;
        }
      }
    }
  }
  img.authorImage {
    height: 20em;
    width: auto;
    max-width: 100%;
  }
  .framework ul {
    width: auto;
  }
  @extend %a-line-none;
}

.history {
  h3 {
    margin-bottom: 0;
  }
}

.changeLog {
  margin: 2rem 0.5rem 1rem;
  h3 {
    margin: 0;
  }
  .list {
    text-align: left;
    margin: auto;
    max-width: 46rem;
  }
  .summary {
    display: flex;
    align-items: flex-start;
    > span:not(.once):hover {
      text-decoration-line: underline;
    }
    span {
      flex: 1;
    }
    .date {
      min-width: 6rem;
    }
    .text {
      margin-left: 0.25rem;
    }
  }
  .yearItem {
    > .summary {
      padding-left: 0.25rem;
      background-color: var(--main-color);
      &,
      svg {
        color: white;
      }
    }
    &:nth-child(even) > .summary {
      background-color: var(--main-color-highlight);
    }
  }
  .monthItem {
    display: flex;
    flex-direction: column;
    margin-left: 0.5rem;
    padding: 0;
  }
  .item {
    display: flex;
    margin-left: 0.5rem;
    p {
      margin: 0.25rem 0;
    }
  }
  .date {
    display: inline-flex;
    align-items: center;
    margin: 0.25rem;
    text-align: left;
    svg {
      color: var(--main-color-dark-grayish);
    }
    &.once {
      cursor: initial;
      svg {
        visibility: hidden;
      }
    }
  }
  .body {
    text-align: left;
    flex: 1;
  }
  .readmore {
    color: var(--main-color-dark-grayish);
    margin-left: 0.5rem;
    text-decoration: underline var(--main-color-light-grayish);
  }
  @media (min-width: $tabletWidth) {
    ul li {
      margin: 0 1rem;
    }
    .data {
      margin: 0.25rem 1rem;
    }
  }
}

.modal.filesEdit {
  .header {
    margin: 0 0.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
}

.h1h4Page {
  text-align: center;
  &.middle {
    min-height: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
  }
  h1 {
    font-size: 1.875rem;
    color: var(--main-color);
    margin-top: 2rem;
    margin-bottom: 1.25rem;
  }
  h4 {
    color: var(--main-color-soft);
    font-size: 1.25rem;
    font-weight: bold;
  }
  @media (min-width: $tabletWidth) {
    h1 {
      font-size: 2.25rem;
    }
  }
}

.gridLink {
  display: flex;
  flex-direction: column;
  align-items: center;
  a {
    width: -moz-fit-content;
    width: fit-content;
    display: inline-block;
    text-decoration-line: none;
    padding: 0.5rem;
    > * {
      margin: 0.25em auto;
    }
    &:hover {
      color: var(--main-color-deep);
      background-color: var(--main-color-pale-fluo);
    }
  }
}

.medium-content {
  margin: 1rem 0;
  font-size: 1.25rem;
  color: var(--main-color-dark);
}

body.workers {
  margin: 2rem;
}
.workers {
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  label {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    > span {
      padding-right: 0.5rem;
    }
  }
  textarea,
  input,
  button {
    font-size: 1.5rem;
    padding: 0.25rem 1rem;
  }
  .inline-block,
  button {
    display: inline-block;
  }
}

.postTextarea {
  display: flex;
  flex-direction: row;
  align-items: stretch;
  @media (width < $mobileWidth) {
    flex-direction: column;
  }
  > * {
    flex: 1;
  }
  .preview-area {
    background: transparent;
  }
}

.blogPage {
  margin-top: 1.5rem;
  padding-top: 2rem;
  margin-bottom: 3rem;
  display: flex;
  justify-content: center;
  align-items: center;
  vertical-align: bottom;
  flex-direction: column;
  .title {
    display: inline-flex;
    text-decoration-line: none;
    h2 {
      font-size: 1.875rem;
    }
  }
  a.feed {
    display: inline-flex;
    font-size: 1.25rem;
    margin-left: 0.75rem;
  }
  .notice {
    h2 {
      margin: 1rem auto;
    }
    h4 {
      margin: 2rem auto;
    }
  }
  .message {
    text-align: center;
    a.next {
      display: inline-block;
      margin-top: 1rem;
      margin-bottom: 0.5rem;
      font-size: 1.25rem;
    }
  }
  .article {
    width: 98%;
    max-width: 68rem;
    text-align: left;
    margin: auto;
  }
  .post {
    margin: 1.5rem 1rem;
    .pinned {
      color: var(--sub-color-soft);
    }
    .header {
      display: flex;
      flex-wrap: wrap;
    }
    .title {
      display: inline-block;
      h1 {
        font-size: 1.875rem;
        color: var(--main-color-deep);
        font-weight: bold;
        margin: 1rem 0.5rem;
        display: inline-block;
      }
      h3 {
        font-size: 1.5rem;
        font-weight: bold;
        margin: auto 0.5rem;
        display: inline-block;
        color: var(--main-color-dark);
        a {
          --link-color: var(--main-color-dark);
          --link-color-hover: var(--main-color-strong);
        }
        a {
          text-decoration-line: none;
        }
      }
    }
    .category {
      display: inline-flex;
      align-items: center;
      margin: auto 0.5rem;
      > * {
        margin: auto 0.25rem;
      }
    }
    .footer {
      text-align: right;
      > * {
        margin-left: 0.75rem;
      }
      .status {
        color: var(--main-color-dark-grayish);
      }
      a.status {
        &:hover {
          color: var(--main-color-light-grayish);
        }
      }
    }
  }
  @media (min-width: $tabletWidth) {
    .title h2 {
      font-size: 2.25rem;
    }
    .post .title h1 {
      font-size: 2rem;
    }
    a.feed {
      margin-left: 1rem;
    }
    .article {
      width: 80%;
    }
  }
}

form.blogEdit {
  padding-top: 0.5rem;
  max-width: 48rem !important;
  margin: auto;
  input,
  textarea,
  select,
  button:not(.close) {
    font-size: 1.125rem;
  }
  button {
    padding: 0.25em 1em;
    &.text {
      border-radius: 1rem;
      margin-left: 0.5rem;
    }
  }
  > * {
    padding: 0.5rem 0;
  }
  h1 {
    font-size: 1.875rem;
    color: var(--main-color);
    margin: 1.5rem auto;
  }
  input.title {
    display: block;
    margin: auto;
    font-size: 1.125rem;
    height: 2.25rem;
    padding: 0.5rem 0.75rem;
    width: 25rem;
    max-width: 80%;
  }
  .category {
    display: flex;
    flex-direction: row;
    align-items: center;
    margin: auto;
    min-width: 20rem;
    width: max-content;
    max-width: 95%;
  }
  .modifier {
    margin: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    > * {
      margin: 0 0.5rem;
      &.tight {
        margin: 0 0.25rem;
      }
    }
  }
  .pin {
    width: 3rem;
    text-align: center;
  }
  .date {
    padding: 0.125rem 0.25rem;
  }
  .postTextarea > * {
    min-height: 10rem;
    padding: 0.5rem;
    margin: 0.25rem;
    text-align: start;
    word-break: break-all;
  }
  .action {
    button {
      font-size: 1.25rem;
      margin: 0.5rem 1rem;
    }
  }
  @media (min-width: $tabletWidth) {
    h1 {
      font-size: 2.25rem;
    }
    .modifier > * {
      margin: 0 1rem;
      &.tight {
        margin: 0 0.5rem;
      }
    }
  }
}

.linkPage {
  font-size: 1.125rem;
  margin: auto;
  h3 {
    font-size: 1.75em;
    color: var(--main-color-strong);
  }
  ul {
    text-align: left;
    max-width: 100%;
    min-width: 12rem;
    margin: auto;
    &.font-larger {
      width: max-content;
    }
    li {
      margin: 0.25rem;
      padding: 0;
      display: block;
    }
  }
  .linksArea {
    @include GridList("li", 1);
  }
  .bannerArea {
    li {
      text-align: center;
      display: flex;
      align-items: center;
      justify-content: center;
      > * {
        width: 100%;
      }
    }
    @include GridList("li", 1, $mobileWidth, $tabletWidth, $desktopWidth);
    > * {
      padding: 0rem;
    }
    .banner {
      width: 100%;
      .plane {
        width: 200px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }
    a .banner:hover {
      background-color: var(--main-color-pale-fluo);
    }
  }
}

.stickyLine {
  display: inline-block;
  color: var(--main-color-text);
  padding: 1rem 1.5rem 1rem 1.5rem;
  background: var(--main-color-pale);
  border-left: solid 0.75rem var(--main-color-strong);
  @at-root a#{&} {
    &:hover {
      color: white;
      background: var(--main-color-soft);
    }
  }
}

.stitch {
  display: inline-block;
  color: var(--main-color-text);
  background: var(--main-color-pale);
  box-shadow: 0px 0px 0px 5px var(--main-color-pale);
  border: dashed 1px var(--main-color-deep);
  padding: 0.2em 0.5em;
}

.leaf {
  display: inline-block;
  font-size: 1.5rem;
  position: relative;
  color: var(--main-color);
  padding: 10px 0;
  text-align: center;
  margin: 1.5rem 0;
  &::before {
    content: "";
    position: absolute;
    top: -8px;
    left: 50%;
    width: 150px;
    height: 58px;
    border-radius: 50%;
    border: 5px solid var(--main-color-soft);
    border-left-color: transparent;
    border-right-color: transparent;
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
  }
}

@keyframes ZoomFadeOutAnim {
  0% {
    scale: 0;
    opacity: 1;
  }
  100% {
    scale: 1;
    opacity: 0;
  }
}

.clickEffects {
  .clickEffect {
    z-index: 99999;
    position: fixed;
    pointer-events: none;
    translate: -50% -50%;
    transform-origin: center;
    &.spread {
      animation: ZoomFadeOutAnim linear forwards;
      animation-duration: 500ms;
    }
    &.blank {
      width: 100px;
      height: 100px;
      background-color: #b6b6b6aa;
      clip-path: circle(50% at 50% 50%);
    }
  }
}

.select__group > div:nth-child(2) > div:nth-child(n + 50) {
  display: none;
}

.fc {
  font-size: 1.2rem;
  --fc-event-bg-color: var(--def-main-color-strong);
  --fc-border-color: var(--main-color-light-grayish);
  --fc-event-hover-color: var(--def-main-color);
  --fc-event-border-color: var(--main-color-strong);
  --fc-button-bg-color: var(--def-main-color-strong);
  --fc-button-hover-bg-color: var(--def-main-color);
  --fc-button-hover-border-color: var(--main-color-soft);
  --fc-button-active-bg-color: var(--main-color-deep);
  --fc-button-active-border-color: var(--main-color-deep);
  --fc-button-border-color: var(--main-color-deep);
  --fc-button-active-border-color: var(--main-color-dark);
  --fc-neutral-bg-color: var(--main-color-pale-fluo);
  --fc-list-event-hover-bg-color: var(--main-color-pale);
  --fc-today-bg-color: var(--main-color-pale-fluo);
  --fc-page-bg-color: var(--background-bw);
  .fc-event a {
    @extend %auto-phrase;
  }
  .fc-day-sat {
    --fc-non-business-color: rgba(95, 146, 240, 0.132);
  }
  .fc-day-sun {
    --fc-non-business-color: rgba(240, 95, 95, 0.132);
  }
  .fc-h-event:hover {
    --fc-event-bg-color: var(--fc-event-hover-color);
  }
  .fc-list-empty {
    --fc-neutral-bg-color: var(--main-color-grayish-fluo);
  }
  .fc-h-event {
    color: white;
  }
  a {
    text-decoration: none;
    --link-color: var(--main-color-deep);
    --link-color-hover: var(--main-color-dark);
  }
  .fc-list-event.fc-event-forced-url {
    @extend %cursor-pointer;
  }

  .fc-toolbar-title {
    color: var(--main-color-deep);
  }

  .fc-toolbar-title,
  .fc-col-header,
  .fc-daygrid-day-top,
  .fc-list-day {
    font-family: var(--font-Mandali), Arial, sans-serif;
  }
  .fc-col-header {
    line-height: 1.3em;
  }
  .fc-button-group {
    button:focus {
      box-shadow: none !important;
    }
  }
  .fc-today-button:disabled {
    opacity: 1;
  }
  .fc-button-primary {
    font-size: 0.9em;
  }
  .fc-toolbar {
    .fc-toolbar-title {
      @extend %auto-phrase;
      max-width: 60vw;
      font-size: 1.2em;
    }
    &.fc-header-toolbar {
      margin-bottom: 0.3rem;
      .fc-toolbar-chunk:last-child {
        text-align: right;
      }
    }
  }
  .fc-direction-ltr .fc-toolbar > * {
    & > * {
      margin-bottom: 0.1em;
      @media (min-width: #{$mobileWidth}) {
        margin-bottom: 0.2em;
      }
    }
    & > :not(:first-child) {
      margin-left: 0.3em;
      @media (min-width: #{$mobileWidth}) {
        margin-left: 0.5em;
      }
    }
  }
  .fc-daygrid-event {
    overflow: hidden;
    background-color: var(--fc-event-bg-color);
    border: 1px solid var(--fc-event-border-color);
    color: var(--fc-event-text-color);
    &:hover {
      --fc-event-bg-color: var(--fc-event-hover-color);
      color: var(--fc-event-text-color);
    }
    .fc-daygrid-event-dot {
      --fc-event-border-color: var(--fc-event-text-color);
    }
    .fc-event-time {
      margin-right: 0.3em;
    }
  }
  .fc-list-event-time {
    min-width: 7.5em;
    text-align: center;
  }
  .fc-toolbar-title {
    line-height: 1.25em;
  }
  .fc-day-view .fc-daygrid-day-events {
    font-size: 1.25em;
    .fc-event {
      padding: 0.25em 0.5em;
      > * {
        margin-right: 0.5em;
      }
    }
  }
  .fc-event-main,
  .fc-event-main-frame {
    display: flex;
    align-items: center;
  }
  .topPage > & {
    margin: 2rem auto;
    width: 95%;
    max-width: 72rem;
  }
  @media (max-width: #{$mobileWidth - 1}) {
    font-size: 1rem;
    .fc-button-group {
      margin: 0.1rem auto;
    }
    .fc-button {
      padding: 0.25em 0.5em;
    }
  }
  &.background {
    display: none;
  }
  .rbButtonArea {
    button.openAddEvents {
      display: flex;
      &:hover {
        background-color: var(--main-color-strong);
      }
      @media (min-width: 1500px) {
        margin: 1rem;
        opacity: 0.7;
        scale: 1.1;
      }
    }
  }
  @media (max-width: #{$miniDesktopWidth - 1}) {
    .fc-openAddEvents-button {
      display: none;
    }
  }
}

.modal.eventsViewer {
  padding: 1.6rem 1rem 0;
  min-width: 32em;
  @media (width < $mobileWidth) {
    min-width: 90vw;
    div.time {
      max-width: 88vw;
    }
  }
  @media ($mobileWidth <= width < $tabletWidth) {
    min-width: 85vw;
    div.time {
      max-width: 80vw;
    }
  }
  @media ($tabletWidth <= width) {
    min-width: 30em;
    div.time {
      max-width: 28em;
    }
  }
  &.loading {
    padding: 1rem;
    font-size: 1.25rem;
    min-width: auto;
  }
  h2 {
    @extend %auto-phrase;
    font-size: 1.75em;
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    padding: 0 2rem;
    margin: 0.5rem auto 0.75rem;
  }
  a {
    display: inline-flex;
    justify-content: center;
    align-items: stretch;
  }
  button,
  .button {
    margin-right: 0.25em;
    margin-left: 0.25em;
    background-color: transparent;
    color: var(--main-color-strong);
    &:hover {
      color: var(--main-color-deep);
    }
    svg {
      font-size: 2.325em;
      margin: 0.125em;
      opacity: 0.9;
      @media (min-width: #{$mobileWidth}) {
        font-size: 2.5em;
        margin: 0.25em;
      }
    }
    &.large {
      svg {
        width: 2.5em;
        height: 2.5em;
        margin: 1em;
      }
    }
  }
  & > * {
    margin: 0.5em 1em;
    width: max-content;
    max-width: 80vw;
  }
  div.time {
    min-height: 4.5em;
    padding-top: 0.25em;
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin: 0 auto;
    &.enableCountdown {
      justify-content: flex-end;
    }
    &.single {
      padding: 0 1rem 0;
      h3 {
        font-size: 1.75em;
      }
    }
    h3 {
      margin: 0 1em;
      display: flex;
      align-items: center;
      justify-content: center;
      text-align: center;
      font-size: 1.6em;
      a {
        > span.time {
          margin-left: 0.25em;
        }
      }
    }
    &.enableCountdown {
      padding-top: 0;
      h3 {
        margin: 0 1em;
        font-size: 1.2em;
      }
      h4 {
        margin-bottom: 0.5rem;
      }
      &.smaller {
        h3 {
          font-size: 1em;
          margin: 0;
        }
      }
    }
    &.smaller {
      padding-top: 0;
      h3 {
        font-size: 1.5em;
      }
    }
    h3 > .time {
      --link-color: var(--main-color-deep);
      color: var(--link-color);
      display: inline-flex;
      flex-wrap: wrap;
      justify-content: center;
      line-height: 1.25em;
      > .time {
        margin-left: 0.25em;
      }
      .during {
        margin: auto 0.3em;
      }
    }
    h3 a:hover {
      color: var(--link-color-hover);
    }
  }
  h4 {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0.5rem 1rem 0;
    font-size: 1.5em;
    .countdown {
      color: var(--main-color-dark);
      word-break: keep-all;
      text-align: center;
    }
  }
  h5 {
    display: flex;
    align-items: center;
    font-size: 1.1em;
  }
  .description {
    p:first-child {
      margin-top: 0;
    }
    p:last-child {
      margin-bottom: 0;
    }
  }
  .buttons {
    position: sticky;
    margin: 0;
    padding: 0 0.25rem 1rem 0;
    bottom: 0;
    width: 100%;
    max-width: none;
    display: flex;
    justify-content: flex-end;
    pointer-events: none;
    button,
    .button {
      margin: 0;
      font-size: 0.75rem;
      pointer-events: all;
    }
  }
  a > svg {
    height: 1.2em;
  }
  @media (width < $mobileWidth) {
    padding: 1.5rem 1rem 0;
    & > * {
      margin: 0.5em auto;
    }
    h2 {
      margin: 0 auto;
      padding: 0 1rem;
    }
    div.time {
      min-height: 4.5em;
      padding-top: 0;
      &.single {
        padding: 0;
        margin: 0 auto;
        &.enableCountdown {
          padding-top: 0;
        }
        h3 {
          font-size: 1.9em;
        }
      }
      h3 {
        margin: 0;
        font-size: 1.6em;
      }
      h4 {
        margin: 0.4rem 1rem;
        font-size: 1.5em;
      }
      &.smaller {
        h3 {
          font-size: 1.3em;
        }
      }
      &.enableCountdown {
        h3 {
          font-size: 1.2em;
        }
        &.smaller {
          h3 {
            font-size: 1em;
          }
          h4 {
            margin-top: 0.1em;
          }
        }
      }
    }
    h5 {
      font-size: 1em;
    }
  }
}

.calendar-app {
  margin: 1rem auto 1rem;
  padding: 1rem;
  margin-left: auto;
  margin-right: auto;
  max-width: 1280px;
  .calendarAppEdit {
    font-size: 1.1em;
    textarea,
    .preview-area {
      border-radius: 0.5rem;
      padding: 0.2rem 0.5em;
      min-width: 100%;
      max-width: 100%;
      min-height: 6em;
      max-height: 65vh;
      @media (min-width: #{$mobileWidth}) {
        min-width: 19.5rem;
        max-width: 75vw;
      }
    }
    label {
      display: flex;
      align-items: center;
      input {
        flex: 1;
      }
      span.label {
        margin: 0;
      }
      input[type="checkbox"] {
        flex: 0;
        margin-left: 0.5em;
        width: 1em;
        height: 1em;
      }
    }
    .switch {
      @extend %headerSwitch;
      .item {
        background-color: var(--background-bw);
        border-radius: 0;
      }
    }
  }
}

.errorPage {
  main {
    margin: 0 1em;
    > a {
      margin: 1em;
      display: inline-block;
    }
  }
}
